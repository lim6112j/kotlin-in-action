/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.enums.Color
import org.enums.Color.*
import org.enums.getMnemonic
import org.expr.*
import org.shapes.createRandomRectangle
import org.example.joinToString

class App {
  val greeting: String
    get() {
      return "Hello World!"
    }
}

fun mix(c1: Color, c2: Color) =
        when (setOf(c1, c2)) {
          setOf(RED, YELLOW) -> ORANGE
          setOf(YELLOW, BLUE) -> GREEN
          setOf(BLUE, VIOLET) -> INDIGO
          else -> throw Exception("Dirty color")
        }

fun <T> joinToString(
        collection: Collection<T>,
        separator: String,
        prefix: String,
        postfix: String
): String {
  val result = StringBuilder(prefix)
  for ((index, element) in collection.withIndex()) {
    if (index > 0) result.append(separator)
    result.append(element)
  }
  result.append(postfix)
  return result.toString()
}
fun String.lastChar(): Char = this.get(this.length - 1)
fun <T> Collection<T>.joinToString2(
		separator: String = ", ",
		prefix: String = "",
		postfix: String = ""
):String {
		val result = StringBuilder(prefix)
		for ((index, element) in this.withIndex()){
				if (index>0) result.append(separator)
				result.append(element)
		}
		result.append(postfix)
		return result.toString()
}
fun main() {
  println(App().greeting)
  val rect = createRandomRectangle()
  println(rect.height + rect.width)
  println(rect.isSquare)
  println(Color.BLUE.rgb())
  println(getMnemonic(Color.BLUE))
  println(mix(RED, YELLOW))
  println(eval(Sum(Sum(Num(1), Num(2)), Num(4))))
  val strings = listOf("first", "second", "fourteenth")
  val arrayList = arrayListOf(1, 2, 3)
  println(strings)
  println(arrayList)
  println(joinToString(arrayList, ", ", "(", ")"))
	println(joinToString(strings, ", ", "(", ")"))
	val lastc = "kotlin".lastChar()
	println("last char $lastc")
	println(arrayList.joinToString2())
}
